[tool.black]
target-version = ['py312']
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
force_alphabetical_sort_within_sections = true
known_first_party = ["custom_components.adaptive_climate"]
known_third_party = ["homeassistant"]

[tool.pylint.MASTER]
ignore = ["tests"]
load-plugins = ["pylint.extensions.code_style", "pylint.extensions.typing"]

[tool.pylint.BASIC]
good-names = ["_", "ev", "ex", "fp", "i", "id", "j", "k", "Run", "T", "dt"]

[tool.pylint.DESIGN]
max-attributes = 15
max-args = 10

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "too-few-public-methods",
    "duplicate-code",
    "format",
    "unsubscriptable-object",
    "unused-import",
]

[tool.pylint.SIMILARITIES]
min-similarity-lines = 4
ignore-comments = true
ignore-docstrings = true

[tool.pylint.FORMAT]
expected-line-ending-format = "LF"

[tool.mypy]
python_version = "3.12"
show_error_codes = true
follow_imports = "silent"
ignore_missing_imports = true
strict_equality = true
warn_incomplete_stub = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_return_any = true
warn_unreachable = true

[tool.pytest.ini_options]
testpaths = ["tests"]
norecursedirs = [".git", "testing_config"]
asyncio_mode = "auto"
addopts = "--cov=custom_components.adaptive_climate --cov-report=term-missing --cov-report=html --cov-fail-under=80"

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]  # Skip assert_used and shell injection (false positives in HA)

[tool.ruff]
target-version = "py312"
line-length = 88
select = [
    "E", "W",    # pycodestyle
    "F",         # pyflakes
    "I",         # isort
    "N",         # pep8-naming
    "UP",        # pyupgrade
    "YTT",       # flake8-2020
    "S",         # flake8-bandit
    "BLE",       # flake8-blind-except
    "B",         # flake8-bugbear
    "A",         # flake8-builtins
    "C4",        # flake8-comprehensions
    "DTZ",       # flake8-datetimez
    "T10",       # flake8-debugger
    "EM",        # flake8-errmsg
    "FA",        # flake8-future-annotations
    "ISC",       # flake8-implicit-str-concat
    "ICN",       # flake8-import-conventions
    "G",         # flake8-logging-format
    "PIE",       # flake8-pie
    "PT",        # flake8-pytest-style
    "Q",         # flake8-quotes
    "RSE",       # flake8-raise
    "RET",       # flake8-return
    "SLF",       # flake8-self
    "SIM",       # flake8-simplify
    "TID",       # flake8-tidy-imports
    "TCH",       # flake8-type-checking
    "ARG",       # flake8-unused-arguments
    "PTH",       # flake8-use-pathlib
    "PGH",       # pygrep-hooks
    "PL",        # pylint
    "TRY",       # tryceratops
    "RUF",       # ruff-specific
]
ignore = [
    "S101",      # Use of assert
    "PLR0913",   # Too many arguments
    "PLR0915",   # Too many statements
    "PLR2004",   # Magic value used in comparison
    "PLR0911",   # Too many return statements
    "T201",      # print found
    "S104",      # Hardcoded bind all interfaces
    "S108",      # Probable insecure usage of temp file/directory
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
]

[tool.ruff.isort]
known-first-party = ["custom_components.adaptive_climate"]
known-third-party = ["homeassistant"]
